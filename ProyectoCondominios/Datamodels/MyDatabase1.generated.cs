//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1573, 1591

using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;

using LinqToDB;
using LinqToDB.Common;
using LinqToDB.Configuration;
using LinqToDB.Data;
using LinqToDB.Mapping;

namespace DataModels
{
	/// <summary>
	/// Database       : PVI_ProyectoFinal
	/// Data Source    : MSI\SQLEXPRESS
	/// Server Version : 14.00.1000
	/// </summary>
	public partial class PviProyectoFinalDB : LinqToDB.Data.DataConnection
	{
		public ITable<Bitacora>     Bitacoras      { get { return this.GetTable<Bitacora>(); } }
		public ITable<Casa>         Casas          { get { return this.GetTable<Casa>(); } }
		public ITable<Categoria>    Categorias     { get { return this.GetTable<Categoria>(); } }
		public ITable<Cobro>        Cobros         { get { return this.GetTable<Cobro>(); } }
		public ITable<DetalleCobro> DetalleCobroes { get { return this.GetTable<DetalleCobro>(); } }
		public ITable<Persona>      Personas       { get { return this.GetTable<Persona>(); } }
		public ITable<Servicio>     Servicios      { get { return this.GetTable<Servicio>(); } }

		public PviProyectoFinalDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public PviProyectoFinalDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public PviProyectoFinalDB(DataOptions options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public PviProyectoFinalDB(DataOptions<PviProyectoFinalDB> options)
			: base(options.Options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table(Schema="dbo", Name="Bitacora")]
	public partial class Bitacora
	{
		[Column("id_bitacora"), PrimaryKey, Identity] public int      IdBitacora { get; set; } // int
		[Column("detalle"),     NotNull             ] public string   Detalle    { get; set; } // text
		[Column("id_casa"),     NotNull             ] public int      IdCasa     { get; set; } // int
		[Column("id_user"),     NotNull             ] public int      IdUser     { get; set; } // int
		[Column("fecha"),       NotNull             ] public DateTime Fecha      { get; set; } // date

		#region Associations

		/// <summary>
		/// FK__Cobros__id_bitac__48CFD27E_BackReference (dbo.Cobros)
		/// </summary>
		[Association(ThisKey="IdBitacora", OtherKey="IdBitacora", CanBeNull=true)]
		public IEnumerable<Cobro> Cobrosidbitac48CFD27E { get; set; }

		/// <summary>
		/// FK__Cobros__id_bitac__6477ECF3_BackReference (dbo.Cobros)
		/// </summary>
		[Association(ThisKey="IdBitacora", OtherKey="IdBitacora", CanBeNull=true)]
		public IEnumerable<Cobro> Cobrosidbitac6477Ecfs { get; set; }

		/// <summary>
		/// FK__Bitacora__id_cas__4BAC3F29 (dbo.Casas)
		/// </summary>
		[Association(ThisKey="IdCasa", OtherKey="IdCasa", CanBeNull=false)]
		public Casa Idcas4BAC3F { get; set; }

		/// <summary>
		/// FK__Bitacora__id_cas__6754599E (dbo.Casas)
		/// </summary>
		[Association(ThisKey="IdCasa", OtherKey="IdCasa", CanBeNull=false)]
		public Casa Idcas6754599E { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="Casas")]
	public partial class Casa
	{
		[Column("id_casa"),             PrimaryKey, Identity] public int      IdCasa             { get; set; } // int
		[Column("nombre_casa"),         NotNull             ] public string   NombreCasa         { get; set; } // text
		[Column("metros_cuadrados"),    NotNull             ] public decimal  MetrosCuadrados    { get; set; } // decimal(10, 2)
		[Column("numero_habitantes"),   NotNull             ] public int      NumeroHabitantes   { get; set; } // int
		[Column("numero_habitaciones"), NotNull             ] public int      NumeroHabitaciones { get; set; } // int
		[Column("numero_banos"),        NotNull             ] public int      NumeroBanos        { get; set; } // int
		[Column("precio"),              NotNull             ] public decimal  Precio             { get; set; } // decimal(18, 0)
		[Column("id_persona"),          NotNull             ] public int      IdPersona          { get; set; } // int
		[Column("Fecha_construccion"),  NotNull             ] public DateTime FechaConstruccion  { get; set; } // date
		[Column("estado"),              NotNull             ] public bool     Estado             { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK__Bitacora__id_cas__4BAC3F29_BackReference (dbo.Bitacora)
		/// </summary>
		[Association(ThisKey="IdCasa", OtherKey="IdCasa", CanBeNull=true)]
		public IEnumerable<Bitacora> Bitacoraidcas4BAC3F { get; set; }

		/// <summary>
		/// FK__Bitacora__id_cas__6754599E_BackReference (dbo.Bitacora)
		/// </summary>
		[Association(ThisKey="IdCasa", OtherKey="IdCasa", CanBeNull=true)]
		public IEnumerable<Bitacora> Bitacoraidcas6754599E { get; set; }

		/// <summary>
		/// FK__Cobros__id_casa__47DBAE45_BackReference (dbo.Cobros)
		/// </summary>
		[Association(ThisKey="IdCasa", OtherKey="IdCasa", CanBeNull=true)]
		public IEnumerable<Cobro> Cobrosidcasa47Dbaes { get; set; }

		/// <summary>
		/// FK__Cobros__id_casa__6383C8BA_BackReference (dbo.Cobros)
		/// </summary>
		[Association(ThisKey="IdCasa", OtherKey="IdCasa", CanBeNull=true)]
		public IEnumerable<Cobro> Cobrosidcasa6383C8Bas { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="Categorias")]
	public partial class Categoria
	{
		[Column("id_categoria"), PrimaryKey,  Identity] public int    IdCategoria { get; set; } // int
		[Column("nombre"),       NotNull              ] public string Nombre      { get; set; } // varchar(100)
		[Column("descripcion"),     Nullable          ] public string Descripcion { get; set; } // text
		[Column("estado"),       NotNull              ] public bool   Estado      { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK__Servicios__id_ca__46E78A0C_BackReference (dbo.Servicios)
		/// </summary>
		[Association(ThisKey="IdCategoria", OtherKey="IdCategoria", CanBeNull=true)]
		public IEnumerable<Servicio> Serviciosidca46E78A0C { get; set; }

		/// <summary>
		/// FK__Servicios__id_ca__628FA481_BackReference (dbo.Servicios)
		/// </summary>
		[Association(ThisKey="IdCategoria", OtherKey="IdCategoria", CanBeNull=true)]
		public IEnumerable<Servicio> Serviciosidca628Fas { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="Cobros")]
	public partial class Cobro
	{
		[Column("id_cobro"),     PrimaryKey,  Identity] public int       IdCobro     { get; set; } // int
		[Column("id_casa"),      NotNull              ] public int       IdCasa      { get; set; } // int
		[Column("mes"),          NotNull              ] public int       Mes         { get; set; } // int
		[Column("anno"),         NotNull              ] public int       Anno        { get; set; } // int
		[Column("id_bitacora"),  NotNull              ] public int       IdBitacora  { get; set; } // int
		[Column("estado"),       NotNull              ] public bool      Estado      { get; set; } // bit
		[Column("monto"),        NotNull              ] public decimal   Monto       { get; set; } // decimal(10, 2)
		[Column("fecha_pagada"),    Nullable          ] public DateTime? FechaPagada { get; set; } // date

		#region Associations

		/// <summary>
		/// FK__DetalleCo__id_co__4AB81AF0_BackReference (dbo.DetalleCobro)
		/// </summary>
		[Association(ThisKey="IdCobro", OtherKey="IdCobro", CanBeNull=true)]
		public IEnumerable<DetalleCobro> DetalleCoidco4AB81Afs { get; set; }

		/// <summary>
		/// FK__DetalleCo__id_co__66603565_BackReference (dbo.DetalleCobro)
		/// </summary>
		[Association(ThisKey="IdCobro", OtherKey="IdCobro", CanBeNull=true)]
		public IEnumerable<DetalleCobro> DetalleCoidcoes { get; set; }

		/// <summary>
		/// FK__Cobros__id_bitac__48CFD27E (dbo.Bitacora)
		/// </summary>
		[Association(ThisKey="IdBitacora", OtherKey="IdBitacora", CanBeNull=false)]
		public Bitacora Idbitac48CFD27E { get; set; }

		/// <summary>
		/// FK__Cobros__id_bitac__6477ECF3 (dbo.Bitacora)
		/// </summary>
		[Association(ThisKey="IdBitacora", OtherKey="IdBitacora", CanBeNull=false)]
		public Bitacora Idbitac6477ECF { get; set; }

		/// <summary>
		/// FK__Cobros__id_casa__47DBAE45 (dbo.Casas)
		/// </summary>
		[Association(ThisKey="IdCasa", OtherKey="IdCasa", CanBeNull=false)]
		public Casa Idcasa47DBAE { get; set; }

		/// <summary>
		/// FK__Cobros__id_casa__6383C8BA (dbo.Casas)
		/// </summary>
		[Association(ThisKey="IdCasa", OtherKey="IdCasa", CanBeNull=false)]
		public Casa Idcasa6383C8BA { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="DetalleCobro")]
	public partial class DetalleCobro
	{
		[Column("id_servicio"), PrimaryKey(1), NotNull] public int IdServicio { get; set; } // int
		[Column("id_cobro"),    PrimaryKey(2), NotNull] public int IdCobro    { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__DetalleCo__id_co__66603565 (dbo.Cobros)
		/// </summary>
		[Association(ThisKey="IdCobro", OtherKey="IdCobro", CanBeNull=false)]
		public Cobro DetalleCoidco { get; set; }

		/// <summary>
		/// FK__DetalleCo__id_co__4AB81AF0 (dbo.Cobros)
		/// </summary>
		[Association(ThisKey="IdCobro", OtherKey="IdCobro", CanBeNull=false)]
		public Cobro DetalleCoidco4AB81AF { get; set; }

		/// <summary>
		/// FK__DetalleCo__id_se__49C3F6B7 (dbo.Servicios)
		/// </summary>
		[Association(ThisKey="IdServicio", OtherKey="IdServicio", CanBeNull=false)]
		public Servicio DetalleCoidse49C3F6B { get; set; }

		/// <summary>
		/// FK__DetalleCo__id_se__656C112C (dbo.Servicios)
		/// </summary>
		[Association(ThisKey="IdServicio", OtherKey="IdServicio", CanBeNull=false)]
		public Servicio DetalleCoidse656C112C { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="Persona")]
	public partial class Persona
	{
		[Column("id_persona"),       PrimaryKey,  Identity] public int       IdPersona       { get; set; } // int
		[Column("nombre"),           NotNull              ] public string    Nombre          { get; set; } // varchar(100)
		[Column("apellido"),         NotNull              ] public string    Apellido        { get; set; } // varchar(100)
		[Column("email"),            NotNull              ] public string    Email           { get; set; } // varchar(150)
		[Column("telefono"),            Nullable          ] public string    Telefono        { get; set; } // varchar(15)
		[Column("direccion"),           Nullable          ] public string    Direccion       { get; set; } // varchar(255)
		[Column("fecha_nacimiento"),    Nullable          ] public DateTime? FechaNacimiento { get; set; } // date
		[Column("contrasena"),          Nullable          ] public string    Contrasena      { get; set; } // varchar(255)
		[Column("estado"),              Nullable          ] public bool?     Estado          { get; set; } // bit
		[Column("tipo_persona"),        Nullable          ] public string    TipoPersona     { get; set; } // varchar(50)
	}

	[Table(Schema="dbo", Name="Servicios")]
	public partial class Servicio
	{
		[Column("id_servicio"),  PrimaryKey,  Identity] public int     IdServicio  { get; set; } // int
		[Column("nombre"),       NotNull              ] public string  Nombre      { get; set; } // varchar(100)
		[Column("descripcion"),     Nullable          ] public string  Descripcion { get; set; } // text
		[Column("precio"),       NotNull              ] public decimal Precio      { get; set; } // decimal(10, 2)
		[Column("id_categoria"), NotNull              ] public int     IdCategoria { get; set; } // int
		[Column("estado"),       NotNull              ] public bool    Estado      { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK__DetalleCo__id_se__49C3F6B7_BackReference (dbo.DetalleCobro)
		/// </summary>
		[Association(ThisKey="IdServicio", OtherKey="IdServicio", CanBeNull=true)]
		public IEnumerable<DetalleCobro> DetalleCoidse49C3F6B { get; set; }

		/// <summary>
		/// FK__DetalleCo__id_se__656C112C_BackReference (dbo.DetalleCobro)
		/// </summary>
		[Association(ThisKey="IdServicio", OtherKey="IdServicio", CanBeNull=true)]
		public IEnumerable<DetalleCobro> DetalleCoidse656C112C { get; set; }

		/// <summary>
		/// FK__Servicios__id_ca__46E78A0C (dbo.Categorias)
		/// </summary>
		[Association(ThisKey="IdCategoria", OtherKey="IdCategoria", CanBeNull=false)]
		public Categoria Idca46E78A0C { get; set; }

		/// <summary>
		/// FK__Servicios__id_ca__628FA481 (dbo.Categorias)
		/// </summary>
		[Association(ThisKey="IdCategoria", OtherKey="IdCategoria", CanBeNull=false)]
		public Categoria Idca628FA { get; set; }

		#endregion
	}

	public static partial class PviProyectoFinalDBStoredProcedures
	{
		#region SpActualizaPersona

		public static int SpActualizaPersona(this PviProyectoFinalDB dataConnection, int? @idPersona, string @nombre, string @apellido, string @email, string @telefono, string @direccion, DateTime? @fechaNacimiento, string @contrasena, bool? @estado, string @tipoPersona)
		{
			var parameters = new []
			{
				new DataParameter("@id_persona",       @idPersona,       LinqToDB.DataType.Int32),
				new DataParameter("@nombre",           @nombre,          LinqToDB.DataType.VarChar)
				{
					Size = 100
				},
				new DataParameter("@apellido",         @apellido,        LinqToDB.DataType.VarChar)
				{
					Size = 100
				},
				new DataParameter("@email",            @email,           LinqToDB.DataType.VarChar)
				{
					Size = 150
				},
				new DataParameter("@telefono",         @telefono,        LinqToDB.DataType.VarChar)
				{
					Size = 15
				},
				new DataParameter("@direccion",        @direccion,       LinqToDB.DataType.VarChar)
				{
					Size = 255
				},
				new DataParameter("@fecha_nacimiento", @fechaNacimiento, LinqToDB.DataType.Date),
				new DataParameter("@contrasena",       @contrasena,      LinqToDB.DataType.VarChar)
				{
					Size = 255
				},
				new DataParameter("@estado",           @estado,          LinqToDB.DataType.Boolean),
				new DataParameter("@tipo_persona",     @tipoPersona,     LinqToDB.DataType.VarChar)
				{
					Size = 50
				}
			};

			return dataConnection.ExecuteProc("[dbo].[sp_ActualizaPersona]", parameters);
		}

		#endregion

		#region SpActulizaCasa

		public static int SpActulizaCasa(this PviProyectoFinalDB dataConnection, int? @idCasa, string @nombreCasa, decimal? @metrosCuadrados, int? @numeroHabitantes, int? @numeroHabitaciones, int? @numeroBanos, decimal? @precio, int? @idPersona, DateTime? @FechaConstruccion, bool? @estado)
		{
			var parameters = new []
			{
				new DataParameter("@id_casa",             @idCasa,             LinqToDB.DataType.Int32),
				new DataParameter("@nombre_casa",         @nombreCasa,         LinqToDB.DataType.Text)
				{
					Size = 2147483647
				},
				new DataParameter("@metros_cuadrados",    @metrosCuadrados,    LinqToDB.DataType.Decimal),
				new DataParameter("@numero_habitantes",   @numeroHabitantes,   LinqToDB.DataType.Int32),
				new DataParameter("@numero_habitaciones", @numeroHabitaciones, LinqToDB.DataType.Int32),
				new DataParameter("@numero_banos",        @numeroBanos,        LinqToDB.DataType.Int32),
				new DataParameter("@precio",              @precio,             LinqToDB.DataType.Decimal),
				new DataParameter("@id_persona",          @idPersona,          LinqToDB.DataType.Int32),
				new DataParameter("@Fecha_construccion",  @FechaConstruccion,  LinqToDB.DataType.Date),
				new DataParameter("@estado",              @estado,             LinqToDB.DataType.Boolean)
			};

			return dataConnection.ExecuteProc("[dbo].[sp_ActulizaCasa]", parameters);
		}

		#endregion

		#region SpValidarUsuario

		public static IEnumerable<SpValidarUsuarioResult> SpValidarUsuario(this PviProyectoFinalDB dataConnection, string @Email, string @Contrasena)
		{
			var parameters = new []
			{
				new DataParameter("@Email",      @Email,      LinqToDB.DataType.NVarChar)
				{
					Size = 150
				},
				new DataParameter("@Contrasena", @Contrasena, LinqToDB.DataType.NVarChar)
				{
					Size = 255
				}
			};

			return dataConnection.QueryProc<SpValidarUsuarioResult>("[dbo].[sp_ValidarUsuario]", parameters);
		}

		public partial class SpValidarUsuarioResult
		{
			[Column("id_persona")  ] public int    Id_persona   { get; set; }
			[Column("nombre")      ] public string Nombre       { get; set; }
			[Column("apellido")    ] public string Apellido     { get; set; }
			[Column("email")       ] public string Email        { get; set; }
			[Column("estado")      ] public bool?  Estado       { get; set; }
			[Column("tipo_persona")] public string Tipo_persona { get; set; }
		}

		#endregion
	}

	public static partial class TableExtensions
	{
		public static Bitacora Find(this ITable<Bitacora> table, int IdBitacora)
		{
			return table.FirstOrDefault(t =>
				t.IdBitacora == IdBitacora);
		}

		public static Casa Find(this ITable<Casa> table, int IdCasa)
		{
			return table.FirstOrDefault(t =>
				t.IdCasa == IdCasa);
		}

		public static Categoria Find(this ITable<Categoria> table, int IdCategoria)
		{
			return table.FirstOrDefault(t =>
				t.IdCategoria == IdCategoria);
		}

		public static Cobro Find(this ITable<Cobro> table, int IdCobro)
		{
			return table.FirstOrDefault(t =>
				t.IdCobro == IdCobro);
		}

		public static DetalleCobro Find(this ITable<DetalleCobro> table, int IdServicio, int IdCobro)
		{
			return table.FirstOrDefault(t =>
				t.IdServicio == IdServicio &&
				t.IdCobro    == IdCobro);
		}

		public static Persona Find(this ITable<Persona> table, int IdPersona)
		{
			return table.FirstOrDefault(t =>
				t.IdPersona == IdPersona);
		}

		public static Servicio Find(this ITable<Servicio> table, int IdServicio)
		{
			return table.FirstOrDefault(t =>
				t.IdServicio == IdServicio);
		}
	}
}
